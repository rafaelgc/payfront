"use client";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { AppBar, Box, Button, createTheme, Divider, Drawer, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Paper, ThemeProvider, Toolbar, Typography } from "@mui/material";
import { AttachMoney, InboxOutlined, Mail, MoveToInbox, People } from "@mui/icons-material";
import Link from "next/link";
import { ACTIONS, StateProvider, StoreContext } from "@/store";
import { useContext, useEffect } from "react";

const theme = createTheme({
  components: {
    MuiButtonBase: {
      defaultProps: {
        disableRipple: true, // Disable ripple globally
      },
    },
  },
});


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

/*
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
*/

const drawerWidth = 240;

interface AuthenticationProps {
  children?: any;
}
const Authentication = ({ children }: AuthenticationProps) => {
  const { state, dispatch } = useContext(StoreContext);

  useEffect(() => {
    console.log('use effect');
    const token = localStorage.getItem('token');
    if (token) {
      console.log('dispatching...');
      dispatch({ type: ACTIONS.SET_TOKEN, payload: token });
    }
  }, [dispatch]);

  return <>{children}</>
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <StateProvider>
          <Authentication></Authentication>
          <Box sx={{ display: 'flex' }}>
            <AppBar
              position="fixed"
              sx={{
                zIndex: 10000,
                borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
              }}
              elevation={0}
              // bgcolor white:
              color="inherit"
            >
              <Toolbar>
                <Typography
                  variant="h3"
                  noWrap
                  component="div"
                  sx={{
                    fontWeight: 'bold',
                    fontSize: '1.1em'
                  }}
                >
                  payments.habitacional.es
                </Typography>
              </Toolbar>
            </AppBar>
            <Drawer
              open={true}
              variant="permanent"
              sx={{
                width: drawerWidth,
                flexShrink: 0,
                [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },
              }}
            >
              <Toolbar />
              <Box sx={{ overflow: 'auto' }}>
                <List>
                  <ListItem disablePadding>
                    <ListItemButton
                      LinkComponent={Link}
                      href="/"
                    >
                      <ListItemIcon>
                        <People />
                      </ListItemIcon>
                      <ListItemText primary={'Inquilinos'} />
                    </ListItemButton>
                  </ListItem>
                  <ListItem disablePadding>
                    <ListItemButton
                      LinkComponent={Link}
                      href="/payments"
                    >
                      <ListItemIcon>
                        <AttachMoney />
                      </ListItemIcon>
                      <ListItemText primary={'Pagos'} />
                    </ListItemButton>
                  </ListItem>
                </List>
              </Box>
            </Drawer>
            <Box component="main" sx={{ flexGrow: 1, p: 3, pt: 6 }}>
              <Toolbar />
              <Box
                sx={{
                  maxWidth: '760px',
                  margin: 'auto',
                }}
              >
                {children}
              </Box>
            </Box>
          </Box>
        </StateProvider>
      </body>
    </html>
  );
}
